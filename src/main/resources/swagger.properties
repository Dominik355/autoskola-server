prva.sprava=prva sprava na swagger

instructorController.addRide.value=Pridanie 1 jazdy instruktorom
instructorController.addRide.notes=Vehicle zatial nehame volne. Vrati ResponseEntity so Stringom - bud uspesne, alebo error message
instructorController.addRide.paramValue=Posle sa len datum a cas v danom formate

instructorController.addRides.value=Pridanie viacerych jazd jazdy instruktorom
instructorController.addRides.notes=Vehicle zatial nehame volne. Vrati ResponseEntity so Stringom - bud uspesne, alebo error message
instructorController.addRides.paramValue=Posle sa Array [] objektov, len s datumom a casom v danom formate

instructorController.removeRides.value=Odstranenie jazd instruktorom
instructorController.removeRides.notes=Na statuse jazdy nezalezi. Vrati ResponseEntity so Stringom - bud uspesne, alebo error message
instructorController.removeRides.paramValue=Pole objektov jazd. Treba poslat pole objketov jazd. Vyplneny datum a \u010das

instructorController.getCompletedRides.value=Vrati vsetky odjazdene jazdy v danom datume pre instruktora
instructorController.getCompletedRides.notes=Vrati len jazdy ktore boli ukoncene spravne, nie ze niekto neprisiel. To sa moze potom zmenit ked tak. 
instructorController.getCompletedRides.paramValue=M\u00f4\u017ee\u0161 zada\u0165 aj d\u00e1tum, napr./getCompletedRides?date=2020-03-18. Ak ho nezada\u0161, vr\u00e1ti v\u0161etky jazdy, alebo format - 2020-06-23T...

instructorController.getLastRides.value=Vrati posledne odjazdene jazdy instruktora
instructorController.getLastRides.notes=Vyberaju sa jazdy z poslednych 7 dni, a z nich zadany pocet. Ak pocet nieje zadany - vratia sa vsetky za poslednych 7 dni. Zatial vracia iba riadne ukoncene.
instructorController.getLastRides.paramValue='count' zadas ako URL parameter, napr. getLastRides is integer url parameter, insert as /getLastRides?count=X

instructorController.completeRide.value=Oznacenie jazdy ako splnenej
instructorController.completeRide.notes=Jazda sa moze splnit len ak uz zacala, takze ma stav PENDING. Posle sa objekt RideDTO
instructorController.completeRide.paramValue=vyplnia sa len parametre ID jazdy a pripadne novy Comment

authenticateController.confirmRegistration.value=Potvrdenie registracie z emailu
authenticateController.confirmRegistration.notes=Klikne sa na link v emaili, ak preslo viac ako 24 hodin od registracie - musi sa registrovat znova
authenticateController.confirmRegistration.paramValue= Token z emailu - adresa servera + token

authenticateController.resetPassword.value=Zabudnute heslo
authenticateController.resetPassword.notes=Posle vygenerovane heslo na dany email
authenticateController.resetPassword.paramValue=Email daneho uzivatela

authenticateController.login.value=Prihlasenie 
authenticateController.login.notes=Vrati objekt s JWT tokenom, ID relationshipu a Objekt profileInfo {userID, meno , email, cislo, zaciatok, pocet jazd}
authenticateController.login.paramValue=Objekt s Emailom a heslom

authenticateController.register.value=Vytvorenie uzivatela

relationController.enterSchool.value=Prihlasenie do autoskoly
relationController.enterSchool.notes=Vytvori relationship s danou autoskolou 
relationController.enterSchool.paramValue=id autoskoly, do ktorej chce vstupit

schoolController.createSchool.value=Vytvorenie autoskoly
schoolController.createSchool.notes=Vytvori novu autoskolu - moze vytvarat iba uzivatel s rolou OWNER, zatial tam nieje ziadne potvrdzovanie dalsie. Hned ju vytvori

schoolController.getSchoolInfo.value=Informacie o skole
schoolController.getSchoolInfo.notes=Vrati objekt School, priamo z databazy - to mozem potom zmenit. Do url zadas ID autoskoly

testController.getAllTests.value=Vrati List vsetkych testov

testController.getTest.value=Vrati test s danym cislom

userController.updatePassword.value=Zmena hesla prihlaseneho uzivatela

userController.updateEmail.value=Zmena emailu prihlaseneho uzivatela

studentController.getFreeRides.value=Volne terminy jazd v dany den pre studenta
studentController.getFreeRides.notes=vrati list objektov InstrucotRides, ktory obsahuje meno instruktora a pole jeho volnych casov v ten den

studentController.reserveRide.value=Rezervovanie jazdy \u017eiakom
studentController.reserveRide.notes=v URL po\u0161le\u0161 ID jazdy, na ktor\u00fa sa chce\u0161 prihl\u00e1si\u0165, napr. /student/reserveRide/245

studentController.cancelRide.value=Odhlasenie z jazdy 
studentController.cancelRide.notes=v URL po\u0161le\u0161 ID jazdy, z ktorej sa chce\u0161 odhl\u00e1si\u0165, napr. /student/cancelRide/245

studentController.getReservedRides.value=Vrati zoznam v\u0161etk\u00fdch \u017eiakom rezervovan\u00fdch j\u00e1zd
studentController.getReservedRides.notes=Obi\u010dajn\u00fd GET bez argumentov, vr\u00e1ti LIST objektov j\u00e1zd

studentController.getCompletedRides.value=Vrati zoznam v\u0161etk\u00fdch sko\u010den\u00fdch j\u00e1zd 
studentController.getCompletedRides.notes=Obi\u010dajn\u00fd GET bez argumentov, vr\u00e1ti LIST objektov j\u00e1zd, ktore boli sko\u010dene.
studentController.getCompletedRides.paramValue=M\u00f4\u017ee\u0161 zada\u0165 aj d\u00e1tum, napr./getCompletedRides?date=2020-03-18. Ak ho nezada\u0161, vr\u00e1ti v\u0161etky jazdy

instructorController.showTimes.value=\u010casy pre jazdy
instructorController.showTimes.notes=Vr\u00e1ti v\u0161etky mo\u017en\u00e9 \u010dasy v danom dni, defaulte v\u0161etky TRUE. Ak u\u017e je nejak\u00e1 jazda v tom dni vytvoren\u00e1, len t\u00e1 ma hodnotu TRUE, ostatn\u00e9 FALSE